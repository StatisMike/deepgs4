% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/request_cp.R
\name{PasteRequests}
\alias{PasteRequests}
\alias{CutPasteRequest}
\alias{CopyPasteRequest}
\alias{PasteDataRequest}
\title{Requests to paste data into a sheet}
\usage{
CutPasteRequest(
  source,
  destination,
  pasteType = c("PASTE_NORMAL", "PASTE_VALUES", "PASTE_FORMAT", "PASTE_NO_BORDERS",
    "PASTE_FORMULA", "PASTE_DATA_VALIDATION", "PASTE_CONDITIONAL_FORMATTING")
)

CopyPasteRequest(
  source,
  destination,
  pasteType = c("PASTE_NORMAL", "PASTE_VALUES", "PASTE_FORMAT", "PASTE_NO_BORDERS",
    "PASTE_FORMULA", "PASTE_DATA_VALIDATION", "PASTE_CONDITIONAL_FORMATTING"),
  pasteOrientation = c("NORMAL", "TRANSPOSE")
)

PasteDataRequest(
  coordinate,
  data,
  type = c("PASTE_NORMAL", "PASTE_VALUES", "PASTE_FORMAT", "PASTE_NO_BORDERS",
    "PASTE_FORMULA", "PASTE_DATA_VALIDATION", "PASTE_CONDITIONAL_FORMATTING"),
  delimiter = NULL,
  html = NULL
)
}
\arguments{
\item{source}{object of class \link{GridRange} specifying the location in the grid
where the source data is located}

\item{destination}{object of class \link{GridCoordinate} (for \code{CutPaste})
or \link{GridRange} (for \code{CopyPaste}) specifying the location to paste data}

\item{pasteType}{type of the paste operation to use. See \emph{details} for more information}

\item{pasteOrientation}{how that data should be oriented when pasting. See \emph{details}
for more information}

\item{coordinate}{object of class \link{GridCoordinate} specifying the top left
cell of the \code{PasteData} destination}

\item{data}{string containing the data to paste for \code{PasteData} request}

\item{type}{the same as \code{pasteType} but for \code{PasteData} request}

\item{delimiter}{delimitier if \code{data} is a character-delimited text}

\item{html}{boolean - \code{"TRUE"} if \code{data} is an \emph{html}}
}
\value{
deepgsheets4Req object
}
\description{
Create \code{deepgsheets4Req} objects that allow for pasting data in various way
into the sheet. Send created requests with \code{\link[=send_batchUpdate_req]{send_batchUpdate_req()}}
}
\section{pasteType options}{
\itemize{
\item \strong{PASTE_NORMAL}: Paste values, formulas, formats, and merges.
\item \strong{PASTE_VALUES}: Paste the values ONLY without formats, formulas, or merges.
\item \strong{PASTE_FORMAT}: Paste the format and data validation only.
\item \strong{PASTE_NO_BORDERS}: Like PASTE_NORMAL but without borders.
\item \strong{PASTE_FORMULA}: Paste the formulas only.
\item \strong{PASTE_DATA_VALIDATION}: Paste the data validation only.
\item \strong{PASTE_CONDITIONAL_FORMATTING}: Paste the conditional formatting rules only.
}
}

\section{pasteOrientation options}{
\itemize{
\item \strong{NORMAL}: Paste normally.
\item \strong{TRANSPOSE}: Paste transposed, where all rows become columns and vice versa.
}
}

\section{CutPaste}{

Moves data from the source to the destination. \code{destination} specifies the
top-left cell of the grid. Regardless of the \code{pasteType}, all data will be
cut from the \code{source}
}

\section{CopyPaste}{

Copies data from the \code{source} to the \code{destination.} If the \code{destination} covers
a span that's a multiple of the \code{source}'s height or width, then the data will
be repeated to fill in the \code{destination} range. If the \code{destination} is smaller
than the \code{source} the entire source data will still be copied (beyond the
end of the destination range).
}

\section{PasteData}{

Inserts data into the spreadsheet starting at the specified coordinate. \code{data}
can be either a delimited text (in which case \code{delimiter} needs to be specified)
or an html source (in which case \code{html} needs to be specified and \code{TRUE})
}

\seealso{
Other deepgsheets4Req constructors: 
\code{\link{CellRequests}},
\code{\link{ConditionalFormatRequests}},
\code{\link{DimensionGroupRequests}},
\code{\link{DimensionRequests}},
\code{\link{MergeRequests}},
\code{\link{SheetRequests}}
}
\concept{deepgsheets4Req constructors}
