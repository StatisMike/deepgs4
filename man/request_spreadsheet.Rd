% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/request_spreadsheets.R
\name{request_spreadsheet}
\alias{request_spreadsheet}
\alias{request_ss_get}
\alias{request_ss_create}
\alias{request_ss_batchUpdate}
\alias{request_ss_getByDataFilter}
\title{Send Google Sheets \emph{spreadsheets} requests}
\usage{
request_ss_get(
  spreadsheetId,
  fields = NULL,
  ranges = NULL,
  includeGridData = NULL,
  add_params = list()
)

request_ss_create(spreadsheet)

request_ss_batchUpdate(
  spreadsheetId,
  ...,
  includeSpreadsheetInResponse = NULL,
  fields = NULL,
  responseRanges = NULL,
  responseIncludeGridData = NULL,
  .dots = list()
)

request_ss_getByDataFilter(
  spreadsheetId,
  dataFilters,
  fields = NULL,
  includeGridData = NULL,
  add_params = list()
)
}
\arguments{
\item{spreadsheetId}{ID of the spreadsheet to get or update}

\item{fields}{Fields to get in \emph{FieldMask} notation.}

\item{ranges}{Specified ranges in \emph{A1} notation. See \link{get_A1_not} for more info.}

\item{includeGridData}{Should the \link{GridData} will also be received. By default
they will not be returned. Ignored if \code{fields} are specified}

\item{add_params}{Named list of additional parameters to include in the request}

\item{spreadsheet}{object of class \link{Spreadsheet}}

\item{...}{objects of class \code{dgs4Req}}

\item{includeSpreadsheetInResponse}{Determines if the update response should
include the \code{updatedSpreadsheet}}

\item{responseRanges}{One or multiple character string in \emph{A1} notation. For
more information see \code{\link[=get_A1]{get_A1()}}. Limits the ranges included in the response spreadsheet.}

\item{responseIncludeGridData}{True if grid data should be returned.
Meaningful only if \code{includeSpreadsheetInResponse} is \code{TRUE}. This parameter
is ignored if a field mask was set in the request.}

\item{.dots}{the same as \code{...}, but applied as a list}

\item{dataFilters}{object of class \link{DataFilter} or list of such objects.}
}
\description{
These functions access the main Sheet API endpoint:
\emph{spreadsheets}. They allow getting \link{Spreadsheet} object out of Sheets
API, creating new spreadsheet on basis of such object or updating
objects existing inside gived spreadsheet.
}
\section{Get}{

Get \link{Spreadsheet} object holding specified data about the GoogleSheet spreadsheet.
Use \code{fields} parameter to specify which fields to get in \emph{FieldMask}
format.
\subsection{Returns}{

\link{Spreadsheet} object
}
}

\section{Create}{

Creates a spreadsheet, returning the newly created spreadsheet.
\subsection{Returns}{

\link{Spreadsheet} object
}
}

\section{batchUpdate}{

This function sends \emph{batchUpdate} request to googlesheets API
based on one or many \code{dgs4Req} objects.
Applies one or more updates to the spreadsheet.

Each request is validated before being applied. If \strong{any} request is not
valid then the entire \emph{batchUpdate} request will fail and nothing will be applied.
Some requests have replies to give you some information about how they are
applied. The replies will mirror the requests. For example, if you applied
4 updates and the 3rd one had a reply, then the returned \code{replies} will be a
list containing:
\itemize{
\item 2 empty \code{list()} objects
\item one \code{dgs4Resp} object
\item 1 more empty \code{list()} object
replies, the actual reply, and another empty reply, in that order.
}
\subsection{Warning}{

Due to the collaborative nature of spreadsheets, it is not
guaranteed that the spreadsheet will reflect exactly your changes after
this completes, however it is guaranteed that the updates in the request
will be applied together atomically. Your changes may be altered with
respect to collaborator changes. If there are no collaborators, the
spreadsheet should reflect your changes.
}

\subsection{Returns}{

Named list containing:
\itemize{
\item \code{spreadsheetId}: ID of the spreadsheet that the updates were applied to
\item \code{replies}: List of \code{dgs4Resp} objects or empty lists
\item \code{updatedSpreadsheet}: Object of class \link{Spreadsheet} showing the state
of spreadsheet after the updates. Only if \code{includeSpreadsheetInResponse}
was set to \code{TRUE}.
}
}
}

\section{GetByDataFilter}{

Get \link{Spreadsheet} object holding specified data about the GoogleSheet spreadsheet.
This function differs from \code{request_ss_get()} in that it allows selecting which
subsets of spreadsheet data to return by specifying a \code{dataFilters} parameter.
Multiple \link{DataFilter} objects can be specified. Specifying one or more
of them returns the portions of the spreadsheet that intersect ranges
matched by any of them.
\subsection{Returns}{

\link{Spreadsheet} object
}
}

\seealso{
Other Sheet API requests: 
\code{\link{request_ss_metadata}}
}
\concept{Sheet API requests}
