% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/request_values.R
\name{request_ss_update_values}
\alias{request_ss_update_values}
\title{Update values in a given range in a sheet}
\usage{
request_ss_update_values(
  spreadsheetId,
  range,
  values,
  valueInputOption = c("RAW", "USER_ENTERED"),
  includeValuesInResponse = FALSE,
  responseValueRenderOption = c("FORMATTED_VALUE", "UNFORMATTED_VALUE", "FORMULA"),
  responseDateTimeRenderOption = c("SERIAL_NUMBER", "FORMATTED_STRING")
)
}
\arguments{
\item{spreadsheetId}{ID of the spreadsheet}

\item{range}{specified range in \emph{A1} or \emph{R1C1} notation.
See \code{\link[=get_A1_not]{get_A1_not()}} for more info.}

\item{values}{object of class \link{ValueRange} containing values to update}

\item{valueInputOption}{how the input data should be interpreted}

\item{includeValuesInResponse}{if \code{TRUE}, the updated values will be received
in response. If the range to write was larger than the range actually
written, the response includes all values in the requested range (
excluding trailing empty rows and columns)}

\item{responseValueRenderOption}{How the values in the response should be
rendered}

\item{responseDateTimeRenderOption}{How dates, times and durations in the
response should be rendered}
}
\value{
\link{UpdateValuesResponse} object
}
\description{
Send a request to update given \code{range} of cells with values
provided within provided \code{values}. Communicates with
\href{https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.values/update}{spreadsheets.values.update} method.
}
\section{valueInputOption}{

\itemize{
\item \strong{RAW}: The values the user has entered will not be parsed and will be
stored as-is.
\item \strong{USER_ENTERED}: The values will be parsed as if the user typed them into
the UI. Numbers will stay as numbers, but strings may be converted to
numbers, dates, etc. following the same rules that are applied when entering
text into a cell via the Google Sheets UI.
}
}

\section{responseValueRenderOption}{

\itemize{
\item \strong{FORMATTED_VALUE}: Values will be calculated & formatted in the reply
according to the cell's formatting. Formatting is based on the
spreadsheet's locale, not the requesting user's locale. For example,
if A1 is 1.23 and A2 is =A1 and formatted as currency,
then A2 would return "$1.23".
\item \strong{UNFORMATTED_VALUE}: Values will be calculated, but not formatted in the
reply. For example, if A1 is 1.23 and A2 is =A1 and formatted as currency,
then A2 would return the number 1.23.
\item \strong{FORMULA}: Values will not be calculated. The reply will include the
formulas. For example, if A1 is 1.23 and A2 is =A1 and formatted as
currency, then A2 would return "=A1".
}
}

\section{responseDateTimeRenderOption}{

\itemize{
\item \strong{SERIAL_NUMBER}: Instructs date, time, datetime, and duration fields to
be output as doubles in "serial number" format. For more info, see \code{\link[=dgs4_serial_number]{dgs4_serial_number()}}
\item \strong{FORMATTED_STRING}: Instructs date, time, datetime, and duration fields
to be output as strings in their given number format (which depends
on the spreadsheet locale).
}
}

\seealso{
Other Sheets Values requests: 
\code{\link{request_ss_append_values}()},
\code{\link{request_ss_clear_values}()},
\code{\link{request_ss_get_values}()}
}
\concept{Sheets Values requests}
